import 'package:scooter_cluster/builders/sync/annotations.dart';
import 'package:scooter_cluster/builders/sync/settings.dart';

part 'dashboard.g.dart'; // For StateGenerator

// Removed @freezed
@StateClass('dashboard', Duration(seconds: 1))
class DashboardData with $DashboardData implements Syncable<DashboardData> {
  @StateField()
  double? brightness;
  @StateField()
  int? backlight;
  @StateField()
  String? theme;
  @StateField()
  String? mode;
  @StateField()
  String? debug;

  // Constructor for initial values
  DashboardData({
    this.brightness,
    this.backlight,
    this.theme,
    this.mode,
    this.debug,
  });

  // Factory for a completely initial state, if needed by SyncableCubit
  // Or the SyncableCubit can just use new DashboardData()
  factory DashboardData.initial() => DashboardData();

  // The update method is now generated by StateGenerator in dashboard.g.dart
  // and mixed in via $DashboardData.
  // syncSettings is also provided by $DashboardData mixin.
}
